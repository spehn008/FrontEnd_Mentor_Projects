{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","setDarkMode","console","log","querySelector","classList","setLightMode","getColorModeFromLocalStorage","localStorage","getItem","getColorModeFromPreferences","window","matchMedia","matches","loadAndSetColorMode","click","radioButtons","querySelectorAll","forEach","b","addEventListener","event","checked"],"mappings":"AAAA,aAAA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAGtCE,YAAc,WAChBC,QAAQC,IAAI,eACZL,SAASM,cAAc,QAAQC,UAAY,MAC/C,EAGMC,aAAe,WACjBJ,QAAQC,IAAI,gBACZL,SAASM,cAAc,QAAQC,UAAY,OAC7C,EAGIE,6BAA+B,WACjC,OAAOC,aAAaC,QAAQ,YAChC,EAGMC,4BAA8B,WAChC,OAAOC,OAAOC,WAAW,gCAAgCC,QACvD,OAAS,OACf,EAGMC,oBAAsB,WACxBZ,QAAQC,IAAI,gBACZD,QAAQC,IAAIK,aAAaC,QAAQ,cAGxB,SADKF,gCAAkCG,+BAC9Bb,WAAWkB,QAAUf,YAAYe,OACvD,EAGMC,aAAelB,SAASmB,iBAAiB,0BAC/CD,aAAaE,SAAQ,SAAAC,GACjBA,EAAEC,iBAAiB,SAAS,SAACC,GAC3BxB,WAAWyB,QAAUrB,cAAgBK,cACvC,GACF,IAIFK,OAAOC,WAAW,gCACXQ,iBAAiB,UAAU,SAACC,GAC3BA,EAAMR,QAAUhB,WAAWkB,QAAUf,YAAYe,OACnD,IAGND","file":"script.js","sourcesContent":["const darkButton = document.getElementById('dark');\r\nconst lightButton = document.getElementById('light');\r\n\r\n//sets prefrence to dark mode\r\nconst setDarkMode = () => {\r\n    console.log('setDarkMode');\r\n    document.querySelector('body').classList = 'dark';\r\n}\r\n\r\n//sets preference to light mode\r\nconst setLightMode = () => {\r\n    console.log('setLightMode');\r\n    document.querySelector('body').classList = 'light';\r\n  };\r\n\r\n//gets the color mode from local storage\r\nconst getColorModeFromLocalStorage = () => {\r\n    return localStorage.getItem('colorMode');\r\n};\r\n\r\n//gets the color mode value from system preferences\r\nconst getColorModeFromPreferences = () => {\r\n    return window.matchMedia(\"(perfers-color-scheme: dark)\").matches\r\n    ? 'dark' : 'light'\r\n};\r\n\r\n//sets color to local storage value if value exists, else sets color based on platform's preferences\r\nconst loadAndSetColorMode = () => {\r\n    console.log('setColorMode');\r\n    console.log(localStorage.getItem('colorMode'));\r\n    \r\n    const color = getColorModeFromLocalStorage() || getColorModeFromPreferences();\r\n    color == 'dark' ? darkButton.click() : lightButton.click();\r\n};\r\n\r\n// adds an event listener to each toggle button that when a radio button is checked, change the colorMode to the indicated color\r\nconst radioButtons = document.querySelectorAll('.toggle__wrapper input');\r\nradioButtons.forEach(b => {\r\n    b.addEventListener('click', (event) => {\r\n      darkButton.checked ? setDarkMode() : setLightMode();\r\n    });\r\n  });\r\n\r\n// when the prefers-color-scheme changes, media query with check if match is present\r\n// if it matches, the new color is dark, else it is light\r\nwindow.matchMedia('(prefers-color-scheme: dark)')\r\n      .addEventListener('change', (event) => {\r\n        event.matches ? darkButton.click() : lightButton.click();\r\n      });\r\n      \r\n// Load the right color on startup - localStorage has precedence\r\nloadAndSetColorMode();"]}